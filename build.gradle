/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.unbroken-dome.test-sets' version '3.0.1'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-security:2.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-web-services:2.4.4'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.4.4'

    implementation 'org.hibernate.validator:hibernate-validator:6.1.7.Final'

    runtimeOnly 'org.postgresql:postgresql:42.2.19'

    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'com.h2database:h2:1.4.200'

    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.4.4'
    testImplementation 'org.springframework.security:spring-security-test:5.4.5'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'

    testImplementation 'io.rest-assured:spring-mock-mvc:3.3.0'
    testImplementation 'io.rest-assured:rest-assured:4.0.0'
    testImplementation 'io.rest-assured:rest-assured-common:4.0.0'
    testImplementation 'io.rest-assured:json-path:4.0.0'
    testImplementation 'io.rest-assured:xml-path:4.0.0'

    testImplementation 'com.googlecode.json-simple:json-simple:1.1.1'

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'restapi'
java.sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}